В листах можно по-разному удалять элементы. Давайте пройдемся по всем вариантам.
В этой задаче в видерешении, которое вы увидете завтра, я использую метод clear().
Этот метод полностью очищает список. Соответственно, я добавляю всех участников из одной группы во вторую группу с помощью add(), а из первой группы я удаляю всех участников с помощью clear().

Есть второй метод - remove(Object object), который удаляет конкретный объект из списка, но для того, чтобы он работал, в класе MusicArtist необходимо реализовать два метода - hashcode() и equals(). Зачем нужны эти два метода и как они работают - это большая тема, которая подробно проходится в продвинутом курсе: https://www.udemy.com/course/javarussia/?referralCode=A36A8387475CAFDC6776

Если hashcode() и equals() реализованы в MusicArtist, то удаление артиста выглядеть будет вот так:
members1.remove(new MusicArtist("Mark Wakefield", 19))

То есть мы создаем нового музыкального артиста и такого же музыкального артиста мы удаляем из списка.

Метод remove() имеет еще одну реализацию в списке. Если мы передадим методу remove(int index) целое число, то он будет удалять элемент, который находится по этому индексу в списке.

То есть если у вас есть список:
List<MusicArtist> members1 = new ArrayList<>();
members1.add(new MusicArtist("Mark Wakefield", 19));
members1.add(new MusicArtist("Mike Shinoda", 19));
members1.add(new MusicArtist("Brad Delson", 19));

И вы хотите удалить оттуда Шиноду, то можно вызвать members1.remove(1), так как Шинода находится по индексу 1 в списке (в списке у нас определена последовательность элементов и к элементам можно обращаться по их индексу - как в массиве!).

И последний способ удалить элемент из списка - это с помощью метода removeIf().

Этот метод появился в восьмой версии java и он принимает на вход предикат. Предикат - это сущность, которая возвращает True или False.
Предикат в Java мы передаем с помощью лямбда - выражения. О лямбда выражениях я тоже рассказываю в продвинутом курсе.

Если мы например хотим удалить из группы всех музыкантов, которые старше 30 лет, то это будет выглядеть вот так:
members1.removeIf(musicArtist -> musicArtist.getAge() > 30);

Этот метод будет идти по всем элементам списка и удалять те элементы, на которых предикат возвращает True, то есть на которых значение getAge() больше 30.

Вот 3 метода, которые есть в списке в Java. Эти методы не надо помнить. Все гуглится за 5 секунд в документации. Наберите в гугле List java documentation и кликайте на первую ссылку. Попадете на эту страницу: https://docs.oracle.com/javase/8/docs/api/java/util/List.html

Здесь указаны все методы, которые есть у списков и каждый из методов подробно описан. Можете там еще раз прочитать про методы удаления элементов.

Гугл и документация - наши лучшие друзья. Запоминать ничего не надо, надо гуглить.